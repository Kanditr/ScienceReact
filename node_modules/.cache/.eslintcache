[{"/Users/Gun/workspace/ScienceReact/src/index.js":"1","/Users/Gun/workspace/ScienceReact/src/App.js":"2","/Users/Gun/workspace/ScienceReact/src/reportWebVitals.js":"3","/Users/Gun/workspace/ScienceReact/src/components/Auth.js":"4","/Users/Gun/workspace/ScienceReact/src/components/Login.js":"5","/Users/Gun/workspace/ScienceReact/src/components/Home.js":"6","/Users/Gun/workspace/ScienceReact/src/components/Dashboard.js":"7","/Users/Gun/workspace/ScienceReact/src/config.js":"8","/Users/Gun/workspace/ScienceReact/src/components/Header.js":"9","/Users/Gun/workspace/ScienceReact/src/components/createproject.js":"10","/Users/Gun/workspace/ScienceReact/src/components/Banner.js":"11","/Users/Gun/workspace/ScienceReact/src/components/signup.js":"12","/Users/Gun/workspace/ScienceReact/src/components/form.js":"13","/Users/Gun/workspace/ScienceReact/src/components/Project.js":"14","/Users/Gun/workspace/ScienceReact/src/components/HeaderNotLogIn.js":"15","/Users/Gun/workspace/ScienceReact/src/components/HeaderLoggedIn.js":"16","/Users/Gun/workspace/ScienceReact/src/components/sectionProject.js":"17","/Users/Gun/workspace/ScienceReact/src/components/PageViewProject.js":"18","/Users/Gun/workspace/ScienceReact/src/components/TestReceive.js":"19","/Users/Gun/workspace/ScienceReact/src/components/TestSend.js":"20"},{"size":500,"mtime":1613201056173,"results":"21","hashOfConfig":"22"},{"size":1196,"mtime":1615631988276,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1613201056175,"results":"24","hashOfConfig":"22"},{"size":613,"mtime":1615003206220,"results":"25","hashOfConfig":"22"},{"size":1758,"mtime":1615092676186,"results":"26","hashOfConfig":"22"},{"size":683,"mtime":1615618997362,"results":"27","hashOfConfig":"22"},{"size":699,"mtime":1615130503322,"results":"28","hashOfConfig":"22"},{"size":500,"mtime":1615000395458,"results":"29","hashOfConfig":"22"},{"size":481,"mtime":1615092689099,"results":"30","hashOfConfig":"22"},{"size":5738,"mtime":1615461913691,"results":"31","hashOfConfig":"22"},{"size":1168,"mtime":1615461913690,"results":"32","hashOfConfig":"22"},{"size":1768,"mtime":1613825130759,"results":"33","hashOfConfig":"22"},{"size":797,"mtime":1614994949522,"results":"34","hashOfConfig":"22"},{"size":875,"mtime":1615019362631,"results":"35","hashOfConfig":"22"},{"size":1365,"mtime":1615091585147,"results":"36","hashOfConfig":"22"},{"size":1601,"mtime":1615099029135,"results":"37","hashOfConfig":"22"},{"size":2898,"mtime":1615618881568,"results":"38","hashOfConfig":"22"},{"size":114,"mtime":1615628954937,"results":"39","hashOfConfig":"22"},{"size":285,"mtime":1615640323840,"results":"40","hashOfConfig":"22"},{"size":271,"mtime":1615640553068,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1k8sugy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Gun/workspace/ScienceReact/src/index.js",[],["88","89"],"/Users/Gun/workspace/ScienceReact/src/App.js",[],"/Users/Gun/workspace/ScienceReact/src/reportWebVitals.js",[],"/Users/Gun/workspace/ScienceReact/src/components/Auth.js",[],"/Users/Gun/workspace/ScienceReact/src/components/Login.js",[],"/Users/Gun/workspace/ScienceReact/src/components/Home.js",[],"/Users/Gun/workspace/ScienceReact/src/components/Dashboard.js",["90"],"import React, { useContext } from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport firebaseConfig from \"../config\";\n\nconst DashBoard = () => {\n  const { currentUser } = useContext(AuthContext);\n\n  // if (!currentUser) {\n  //   return <Redirect to=\"/login\" />;\n  // }\n\n  return (\n    <div>\n      <div className=\"container mt-5\">\n        <h1>Welcome</h1>\n        <p>This is the dashboard, if you can see this you're logged in.</p>\n        <button\n          onClick={() => firebaseConfig.auth().signOut()}\n          className=\"btn btn-danger\"\n        >\n          Sign Out\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DashBoard;\n","/Users/Gun/workspace/ScienceReact/src/config.js",[],"/Users/Gun/workspace/ScienceReact/src/components/Header.js",[],"/Users/Gun/workspace/ScienceReact/src/components/createproject.js",["91","92","93","94"],"import React, { Component, useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport firebaseConfig from \"../config\";\nimport { AuthContext } from \"./Auth\";\nimport Header from \"./Header\";\nimport LogIn from \"./Login\";\n\nvar db = firebaseConfig.firestore();\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      User: [],\n      alert: false,\n      alertData: {},\n      redirect: false,\n    };\n  }\n\n  showAlert(type, message) {\n    this.setState({\n      alert: true,\n      alertData: { type, message },\n    });\n    setTimeout(() => {\n      this.setState({ alert: false });\n    }, 4000);\n  }\n\n  resetForm() {\n    this.refs.contactForm.reset();\n  }\n\n  componentDidMount() {\n    db.collection(\"User\")\n      .get()\n      .then((snapshot) => {\n        const User = [];\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          User.push(data);\n        });\n        this.setState({ User: User });\n      });\n  }\n\n  sendMessage(e) {\n    e.preventDefault();\n    let user = firebaseConfig.auth().currentUser;\n    if (!user) {\n      this.setState({\n        redirect: true,\n      });\n    } else {\n      const params = {\n        name: this.inputName.value,\n        email: user.email,\n        type: this.inputType.value,\n        fund: this.inputFund.value,\n        message: this.textAreaMessage.value,\n      };\n      if (\n        params.name &&\n        params.email &&\n        params.type &&\n        params.fund &&\n        params.message\n      ) {\n        db.collection(\"User\")\n          .add(params)\n          .then(() => {\n            this.showAlert(\"success\", \"Your message was sent successfull\");\n          })\n          .catch(() => {\n            this.showAlert(\"danger\", \"Your message could not be sent\");\n          });\n        this.resetForm();\n      } else {\n        this.showAlert(\"warning\", \"Please fill the form\");\n      }\n    }\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/login\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {this.renderRedirect()}\n        {this.state.alert && (\n          <div\n            className={`alert alert-${this.state.alertData.type}`}\n            role=\"alert\"\n          >\n            <div className=\"container\">{this.state.alertData.message}</div>\n          </div>\n        )}\n        <div className=\"container\" style={{ padding: `40px 15px 0px 15px` }}>\n          <div className=\"row\">\n            <div className=\"col-sm-4\">\n              <h2>Project</h2>\n              <form onSubmit={this.sendMessage.bind(this)} ref=\"contactForm\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"Name\"\n                    ref={(name) => (this.inputName = name)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"type\">Type</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"type\"\n                    ref={(type) => (this.inputType = type)}\n                  >\n                    <option value=\"Tech\">Tech</option>\n                    <option value=\"Science\">Science</option>\n                    <option value=\"Community\">Community</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"fund\">Fund</label>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"fund\"\n                    placeholder=\"3000 THB\"\n                    ref={(fund) => (this.inputFund = fund)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"message\">Message</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"message\"\n                    rows=\"3\"\n                    style={{ margin: `0px 0px 10px 0px` }}\n                    ref={(message) => (this.textAreaMessage = message)}\n                  ></textarea>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  style={{ margin: `0px 0px 10px 0px` }}\n                  onClick={this.handleSubmit}\n                >\n                  Send\n                </button>\n              </form>\n            </div>\n            <div className=\"col-sm-8\">\n              <div className=\"row\">\n                {this.state.User.map((User) => (\n                  <div\n                    className=\"col-sm-6\"\n                    key={User.fund}\n                    style={{ margin: `0px 0px 30px 0px` }}\n                  >\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <h4 className=\"card-title\">{User.name}</h4>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">\n                          {User.type}\n                        </h6>\n                        <p className=\"card-text\">{User.message}</p>\n                        <p className=\"card-text\">{User.fund}</p>\n                        <a href={`mailto:${User.email}`} className=\"card-link\">\n                          {User.email}\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;\n","/Users/Gun/workspace/ScienceReact/src/components/Banner.js",["95","96"],"import React, { useContext } from \"react\";\nimport \"./Banner.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport firebaseConfig from \"../config\";\nimport { AuthContext } from \"./Auth\";\n\nlet bannerData = {\n  title: \"Science3 landing page\",\n  desc:\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem corrupti in est unde impedit recusandae! Corporis, eum cum excepturi eius ipsa maxime, quasi, molestias doloribus dolorem ipsum earum aperiam repellendus!\",\n};\n\nfunction Banner() {\n  const { currentUser } = useContext(AuthContext);\n\n  return (\n    <div className=\"banner-bg\">\n      <div className=\"container\">\n        <div className=\"banner-con\">\n          <div className=\"banner-text\">\n            <h1>{bannerData.title}</h1>\n            <p>{bannerData.desc}</p>\n            {currentUser ? (\n              <Link to=\"/createproject\" className=\"banner-btn\">\n                Create a project\n              </Link>\n            ) : (\n              <Link to=\"/login\" className=\"banner-btn\">\n                Create a project\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Banner;\n","/Users/Gun/workspace/ScienceReact/src/components/signup.js",[],"/Users/Gun/workspace/ScienceReact/src/components/form.js",[],"/Users/Gun/workspace/ScienceReact/src/components/Project.js",[],"/Users/Gun/workspace/ScienceReact/src/components/HeaderNotLogIn.js",["97","98"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FiMenu, FiX } from \"react-icons/fi\";\nimport \"./Header.css\";\n\nfunction HeaderNotLogIn() {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  return (\n    <div className=\"header\">\n      <div className=\"container\">\n        <div className=\"header-con\">\n          <div className=\"logo-container\">\n            <a href=\"/\">Science3</a>\n          </div>\n          <ul className={click ? \"menu active\" : \"menu\"}>\n            <li className=\"menu-link\" onClick={closeMobileMenu}>\n              <a href=\"#\">About</a>\n            </li>\n            <li className=\"menu-link\" onClick={closeMobileMenu}>\n              <a href=\"#\">Contact</a>\n            </li>\n            <li>\n              <Link to=\"/login\" className=\"menu-link\" onClick={closeMobileMenu}>\n                Log in\n              </Link>\n            </li>\n            <li>\n              <Link to=\"signup\" className=\"menu-link\" onClick={closeMobileMenu}>\n                Sign up\n              </Link>\n            </li>\n          </ul>\n          <div className=\"mobile-menu\" onClick={handleClick}>\n            {click ? <FiX /> : <FiMenu />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderNotLogIn;\n","/Users/Gun/workspace/ScienceReact/src/components/HeaderLoggedIn.js",["99","100","101","102"],"import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FiMenu, FiX } from \"react-icons/fi\";\nimport { AuthContext } from \"./Auth\";\nimport \"./Header.css\";\nimport firebaseConfig from \"../config\";\n\nfunction HeaderNotLogIn() {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <div className=\"header\">\n      <div className=\"container\">\n        <div className=\"header-con\">\n          <div className=\"logo-container\">\n            <a href=\"/\">Science3</a>\n          </div>\n          <ul className={click ? \"menu active\" : \"menu\"}>\n            <li className=\"menu-link\" onClick={closeMobileMenu}>\n              <a href=\"#\">About</a>\n            </li>\n            <li className=\"menu-link\" onClick={closeMobileMenu}>\n              <a href=\"#\">Contact</a>\n            </li>\n            <li className=\"menu-link\" onClick={closeMobileMenu}>\n              <a href=\"#\">{currentUser.email}</a>\n            </li>\n            <li>\n              <Link\n                to=\"/\"\n                className=\"menu-link\"\n                onClick={closeMobileMenu}\n                onClick={() => firebaseConfig.auth().signOut()}\n              >\n                Sign out\n              </Link>\n            </li>\n          </ul>\n          <div className=\"mobile-menu\" onClick={handleClick}>\n            {click ? <FiX /> : <FiMenu />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderNotLogIn;\n","/Users/Gun/workspace/ScienceReact/src/components/sectionProject.js",[],"/Users/Gun/workspace/ScienceReact/src/components/PageViewProject.js",[],"/Users/Gun/workspace/ScienceReact/src/components/TestReceive.js",[],"/Users/Gun/workspace/ScienceReact/src/components/TestSend.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":11,"nodeType":"109","messageId":"110","endLine":7,"endColumn":22},{"ruleId":"107","severity":1,"message":"111","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":38},{"ruleId":"107","severity":1,"message":"112","line":2,"column":20,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"113","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":21},{"ruleId":"107","severity":1,"message":"114","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":13},{"ruleId":"107","severity":1,"message":"115","line":3,"column":16,"nodeType":"109","messageId":"110","endLine":3,"endColumn":24},{"ruleId":"107","severity":1,"message":"116","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":19,"column":15,"nodeType":"119","endLine":19,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":22,"column":15,"nodeType":"119","endLine":22,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":22,"column":15,"nodeType":"119","endLine":22,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":25,"column":15,"nodeType":"119","endLine":25,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":28,"column":15,"nodeType":"119","endLine":28,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":35,"column":17,"nodeType":"122","endLine":35,"endColumn":64},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Route' is defined but never used.","'AuthContext' is defined but never used.","'LogIn' is defined but never used.","'Redirect' is defined but never used.","'firebaseConfig' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]