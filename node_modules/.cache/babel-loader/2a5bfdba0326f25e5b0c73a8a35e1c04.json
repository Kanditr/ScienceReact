{"ast":null,"code":"var _jsxFileName = \"/Users/Gun/workspace/ScienceReact/src/components/TestReceive.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardGroup from \"react-bootstrap/CardGroup\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport firebaseConfig from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TestReceive = props => {\n  _s();\n\n  // use hook\n  const db = firebaseConfig.firestore().collection(\"User\"); // const [name, setName] = useState();\n  // const [message, setMessage] = useState();\n\n  const [projects, setProject] = useState([]); // const [fund, setFund] = useState();\n\n  let Location = useLocation(); // console.log(Location);\n  // console.log(props, \"props\");\n\n  let Projectname = Location.value.Projectname; // console.log(Projectname, \" Location.data.Id id here new\");\n  // var projects = [];\n\n  useEffect(() => {\n    db.where(\"name\", \"==\", `${Projectname}`).onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(doc => {\n        items.push(doc.data());\n      });\n      setProject(items);\n    }); // putData();\n\n    console.log(projects);\n  }, []); // function putData() {\n  //   let getname = projects.name;\n  //   let getmessage = projects.message;\n  //   // let getfund = projects.fund;\n  //   setName(getname);\n  //   setMessage(getmessage);\n  //   // setFund(getfund);\n  // }\n  // useEffect(() => {\n  //   db.where(\"name\", \"==\", `${Projectname}`).onSnapshot((querySnapshot) => {\n  //     querySnapshot.forEach((doc) => {\n  //       projects.push(doc.data());\n  //     });\n  //     // putData();\n  //     console.log(projects);\n  //   }, []);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/testsend\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-3\",\n          children: \"Back... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardGroup, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"mt-5\",\n            children: [\"id:\", projects.doc.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: projects.doc.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestReceive, \"/2ByOqZ6UMtqia5rEDXR1m5Ao4E=\", false, function () {\n  return [useLocation];\n});\n\n_c = TestReceive;\nexport default TestReceive;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestReceive\");","map":{"version":3,"sources":["/Users/Gun/workspace/ScienceReact/src/components/TestReceive.js"],"names":["React","useState","useEffect","Card","CardGroup","Link","useLocation","firebaseConfig","TestReceive","props","db","firestore","collection","projects","setProject","Location","Projectname","value","where","onSnapshot","querySnapshot","items","forEach","doc","push","data","console","log","name","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,cAAP,MAA2B,WAA3B;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA,QAAMC,EAAE,GAAGH,cAAc,CAACI,SAAf,GAA2BC,UAA3B,CAAsC,MAAtC,CAAX,CAF6B,CAG7B;AACA;;AACA,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBb,QAAQ,CAAC,EAAD,CAAvC,CAL6B,CAM7B;;AAEA,MAAIc,QAAQ,GAAGT,WAAW,EAA1B,CAR6B,CAU7B;AACA;;AAEA,MAAIU,WAAW,GAAGD,QAAQ,CAACE,KAAT,CAAeD,WAAjC,CAb6B,CAe7B;AAEA;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,EAAE,CAACQ,KAAH,CAAS,MAAT,EAAiB,IAAjB,EAAwB,GAAEF,WAAY,EAAtC,EAAyCG,UAAzC,CAAqDC,aAAD,IAAmB;AACrE,YAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC7BF,QAAAA,KAAK,CAACG,IAAN,CAAWD,GAAG,CAACE,IAAJ,EAAX;AACD,OAFD;AAGAX,MAAAA,UAAU,CAACO,KAAD,CAAV;AACD,KAND,EADc,CASd;;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACD,GAZQ,EAYN,EAZM,CAAT,CAnB6B,CAiC7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,SAAD;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,8BAAiCA,QAAQ,CAACU,GAAT,CAAaK,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYf,QAAQ,CAACU,GAAT,CAAaM;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAiBD,CAtED;;GAAMrB,W;UAQWF,W;;;KARXE,W;AAwEN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardGroup from \"react-bootstrap/CardGroup\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport firebaseConfig from \"../config\";\n\nconst TestReceive = (props) => {\n  // use hook\n  const db = firebaseConfig.firestore().collection(\"User\");\n  // const [name, setName] = useState();\n  // const [message, setMessage] = useState();\n  const [projects, setProject] = useState([]);\n  // const [fund, setFund] = useState();\n\n  let Location = useLocation();\n\n  // console.log(Location);\n  // console.log(props, \"props\");\n\n  let Projectname = Location.value.Projectname;\n\n  // console.log(Projectname, \" Location.data.Id id here new\");\n\n  // var projects = [];\n\n  useEffect(() => {\n    db.where(\"name\", \"==\", `${Projectname}`).onSnapshot((querySnapshot) => {\n      const items = [];\n      querySnapshot.forEach((doc) => {\n        items.push(doc.data());\n      });\n      setProject(items);\n    });\n\n    // putData();\n\n    console.log(projects);\n  }, []);\n\n  // function putData() {\n  //   let getname = projects.name;\n  //   let getmessage = projects.message;\n  //   // let getfund = projects.fund;\n\n  //   setName(getname);\n  //   setMessage(getmessage);\n  //   // setFund(getfund);\n  // }\n\n  // useEffect(() => {\n  //   db.where(\"name\", \"==\", `${Projectname}`).onSnapshot((querySnapshot) => {\n  //     querySnapshot.forEach((doc) => {\n  //       projects.push(doc.data());\n  //     });\n  //     // putData();\n  //     console.log(projects);\n  //   }, []);\n  // });\n\n  return (\n    <>\n      <Link to=\"/testsend\">\n        <Card>\n          <h1 className=\"mt-3\">Back... </h1>\n        </Card>\n      </Link>\n      <CardGroup>\n        <Card>\n          <Card.Body>\n            <Card.Title className=\"mt-5\">id:{projects.doc.name}</Card.Title>\n            <Card.Text>{projects.doc.message}</Card.Text>\n          </Card.Body>\n        </Card>\n      </CardGroup>\n    </>\n  );\n};\n\nexport default TestReceive;\n"]},"metadata":{},"sourceType":"module"}