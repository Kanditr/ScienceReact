{"ast":null,"code":"var _jsxFileName = \"/Users/Gun/Documents/GitHub/ScienceReact/src/components/createproject.js\";\nimport React, { Component, useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport firebaseConfig from \"../config\";\nimport { AuthContext } from \"./Auth\";\nimport Header from \"./Header\";\nimport LogIn from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar db = firebaseConfig.firestore();\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.state = {\n      User: [],\n      alert: false,\n      alertData: {},\n      redirect: false\n    };\n  }\n\n  showAlert(type, message) {\n    this.setState({\n      alert: true,\n      alertData: {\n        type,\n        message\n      }\n    });\n    setTimeout(() => {\n      this.setState({\n        alert: false\n      });\n    }, 4000);\n  }\n\n  resetForm() {\n    this.useRef().contactForm.reset();\n  }\n\n  componentDidMount() {\n    db.collection(\"User\").get().then(snapshot => {\n      const User = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        User.push(data);\n      });\n      this.setState({\n        User: User\n      });\n    });\n  }\n\n  sendMessage(e) {\n    e.preventDefault();\n    let user = firebaseConfig.auth().currentUser;\n\n    if (!user) {\n      this.setState({\n        redirect: true\n      });\n    } else {\n      const params = {\n        name: this.inputName.value,\n        email: user.email,\n        type: this.inputType.value,\n        fund: this.inputFund.value,\n        message: this.textAreaMessage.value\n      };\n\n      if (params.name && params.email && params.type && params.fund && params.message) {\n        db.collection(\"User\").add(params).then(() => {\n          this.showAlert(\"success\", \"Your message was sent successfull\");\n        }).catch(() => {\n          this.showAlert(\"danger\", \"Your message could not be sent\");\n        });\n        this.resetForm();\n      } else {\n        this.showAlert(\"warning\", \"Please fill the form\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), this.renderRedirect(), this.state.alert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${this.state.alertData.type}`,\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: this.state.alertData.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: `40px 15px 0px 15px`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.sendMessage.bind(this),\n              ref: \"contactForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"name\",\n                  placeholder: \"Name\",\n                  ref: name => this.inputName = name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"type\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  id: \"type\",\n                  ref: type => this.inputType = type,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Tech\",\n                    children: \"Tech\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Science\",\n                    children: \"Science\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Community\",\n                    children: \"Community\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fund\",\n                  children: \"Fund\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  id: \"fund\",\n                  placeholder: \"3000 THB\",\n                  ref: fund => this.inputFund = fund\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"message\",\n                  children: \"Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  id: \"message\",\n                  rows: \"3\",\n                  style: {\n                    margin: `0px 0px 10px 0px`\n                  },\n                  ref: message => this.textAreaMessage = message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                style: {\n                  margin: `0px 0px 10px 0px`\n                },\n                onClick: this.handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: this.state.User.map(User => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6\",\n                style: {\n                  margin: `0px 0px 30px 0px`\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"card-title\",\n                      children: User.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"card-subtitle mb-2 text-muted\",\n                      children: User.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: User.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: User.fund\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `mailto:${User.email}`,\n                      className: \"card-link\",\n                      children: User.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)\n              }, User.fund, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["/Users/Gun/Documents/GitHub/ScienceReact/src/components/createproject.js"],"names":["React","Component","useContext","Redirect","Route","firebaseConfig","AuthContext","Header","LogIn","db","firestore","Create","constructor","props","renderRedirect","state","redirect","User","alert","alertData","showAlert","type","message","setState","setTimeout","resetForm","useRef","contactForm","reset","componentDidMount","collection","get","then","snapshot","forEach","doc","data","push","sendMessage","e","preventDefault","user","auth","currentUser","params","name","inputName","value","email","inputType","fund","inputFund","textAreaMessage","add","catch","render","padding","bind","margin","handleSubmit","map"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport firebaseConfig from \"../config\";\nimport { AuthContext } from \"./Auth\";\nimport Header from \"./Header\";\nimport LogIn from \"./Login\";\n\nvar db = firebaseConfig.firestore();\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      User: [],\n      alert: false,\n      alertData: {},\n      redirect: false,\n    };\n  }\n\n  showAlert(type, message) {\n    this.setState({\n      alert: true,\n      alertData: { type, message },\n    });\n    setTimeout(() => {\n      this.setState({ alert: false });\n    }, 4000);\n  }\n\n  resetForm() {\n    this.useRef().contactForm.reset();\n  }\n\n  componentDidMount() {\n    db.collection(\"User\")\n      .get()\n      .then((snapshot) => {\n        const User = [];\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          User.push(data);\n        });\n        this.setState({ User: User });\n      });\n  }\n\n  sendMessage(e) {\n    e.preventDefault();\n    let user = firebaseConfig.auth().currentUser;\n    if (!user) {\n      this.setState({\n        redirect: true,\n      });\n    } else {\n      const params = {\n        name: this.inputName.value,\n        email: user.email,\n        type: this.inputType.value,\n        fund: this.inputFund.value,\n        message: this.textAreaMessage.value,\n      };\n      if (\n        params.name &&\n        params.email &&\n        params.type &&\n        params.fund &&\n        params.message\n      ) {\n        db.collection(\"User\")\n          .add(params)\n          .then(() => {\n            this.showAlert(\"success\", \"Your message was sent successfull\");\n          })\n          .catch(() => {\n            this.showAlert(\"danger\", \"Your message could not be sent\");\n          });\n        this.resetForm();\n      } else {\n        this.showAlert(\"warning\", \"Please fill the form\");\n      }\n    }\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/login\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {this.renderRedirect()}\n        {this.state.alert && (\n          <div\n            className={`alert alert-${this.state.alertData.type}`}\n            role=\"alert\"\n          >\n            <div className=\"container\">{this.state.alertData.message}</div>\n          </div>\n        )}\n        <div className=\"container\" style={{ padding: `40px 15px 0px 15px` }}>\n          <div className=\"row\">\n            <div className=\"col-sm-4\">\n              <h2>Project</h2>\n              <form onSubmit={this.sendMessage.bind(this)} ref=\"contactForm\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"Name\"\n                    ref={(name) => (this.inputName = name)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"type\">Type</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"type\"\n                    ref={(type) => (this.inputType = type)}\n                  >\n                    <option value=\"Tech\">Tech</option>\n                    <option value=\"Science\">Science</option>\n                    <option value=\"Community\">Community</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"fund\">Fund</label>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"fund\"\n                    placeholder=\"3000 THB\"\n                    ref={(fund) => (this.inputFund = fund)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"message\">Message</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"message\"\n                    rows=\"3\"\n                    style={{ margin: `0px 0px 10px 0px` }}\n                    ref={(message) => (this.textAreaMessage = message)}\n                  ></textarea>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  style={{ margin: `0px 0px 10px 0px` }}\n                  onClick={this.handleSubmit}\n                >\n                  Send\n                </button>\n              </form>\n            </div>\n            <div className=\"col-sm-8\">\n              <div className=\"row\">\n                {this.state.User.map((User) => (\n                  <div\n                    className=\"col-sm-6\"\n                    key={User.fund}\n                    style={{ margin: `0px 0px 30px 0px` }}\n                  >\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <h4 className=\"card-title\">{User.name}</h4>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">\n                          {User.type}\n                        </h6>\n                        <p className=\"card-text\">{User.message}</p>\n                        <p className=\"card-text\">{User.fund}</p>\n                        <a href={`mailto:${User.email}`} className=\"card-link\">\n                          {User.email}\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}