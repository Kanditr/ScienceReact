{"version":3,"sources":["config.js","components/Auth.js","components/Home.js","components/Dashboard.js","components/Login.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","user","Provider","value","Home","currentUSer","useContext","className","to","DashBoard","onClick","signOut","class","LogIn","onSubmit","e","preventDefault","target","elements","email","password","signInWithEmailAndPassword","error","alert","for","type","name","id","aria-describedby","SignUp","createUserWithEmailAndPassword","App","exact","path","component","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e381049a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = firebase.initializeApp({\n  apiKey: \"AIzaSyAIzbAcCxSifEwYv5tntJPAyxSrvUN5ALs\",\n  authDomain: \"science3-c85d4.firebaseapp.com\",\n  projectId: \"science3-c85d4\",\n  storageBucket: \"science3-c85d4.appspot.com\",\n  messagingSenderId: \"188042430\",\n  appId: \"1:188042430:web:55e8db4b564055cb9a62ef\",\n  measurementId: \"G-Y2XSXP84FE\",\n});\n\nexport default firebaseConfig;\n","import React, { useState, useEffect } from \"react\";\nimport firebaseConfig from \"../config\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    firebaseConfig.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <AuthContext.Provider value={{ currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst Home = () => {\n  const { currentUSer } = useContext(AuthContext);\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <h1>Home</h1>\n        {currentUSer ? (\n          <p>\n            You are logged in - <Link to=\"/dashboard\">View Dashboard</Link>\n          </p>\n        ) : (\n          <p>\n            <Link to=\"/login\" className=\"btn btn-primary\">\n              Log in\n            </Link>{\" \"}\n            or{\" \"}\n            <Link to=\"signup\" className=\"btn btn-success\">\n              Sign up\n            </Link>\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport firebaseConfig from \"../config\";\n\nconst DashBoard = () => {\n  const { currentUser } = useContext(AuthContext);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <div className=\"container mt-5\">\n        <h1>Welcome</h1>\n        <p>This is the dashboard, if you can see this you're logged in.</p>\n        <button\n          onClick={() => firebaseConfig.auth().signOut()}\n          class=\"btn btn-danger\"\n        >\n          Sign Out\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DashBoard;\n","import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport firebaseConfig from \"../config\";\n\nconst LogIn = () => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = e.target.elements;\n    try {\n      firebaseConfig\n        .auth()\n        .signInWithEmailAndPassword(email.value, password.value);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <h1>Log in</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label for=\"exampleInputEmail1\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n            />\n            <div id=\"emailHelp\" className=\"form-text\">\n              We'll never share your email with anyone else.\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label for=\"exampleInputPassword1\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default LogIn;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport firebaseConfig from \"../config\";\n\nconst SignUp = () => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = e.target.elements;\n\n    try {\n      firebaseConfig\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value);\n      setCurrentUser(true);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  if (currentUser) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <h1>Sign Up</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label for=\"exampleInputEmail1\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n            />\n            <div id=\"emailHelp\" className=\"form-text\">\n              We'll never share your email with anyone else.\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label for=\"exampleInputPassword1\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Dashboard from \"./components/Dashboard\";\nimport LogIn from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport { AuthProvider } from \"./components/Auth\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/Dashboard\" component={Dashboard} />\n          <Route exact path=\"/login\" component={LogIn} />\n          <Route exact path=\"/signup\" component={SignUp} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}